# Task ID: 4
# Title: Create GraphQL API Schema
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Define GraphQL schema for memories, people, and their relationships
# Details:
Design and implement a GraphQL schema with the following types and operations:

1. Types:
   - Memory (id, title, date, description, photoUrl, createdAt, updatedAt, people)
   - Person (id, name, relationship, createdAt, updatedAt, memories)
   - MemoryInput (title, date, description, photoUrl, peopleIds)
   - PersonInput (name, relationship)

2. Queries:
   - memories(limit, offset, sortBy): [Memory]
   - memory(id): Memory
   - people(limit, offset, sortBy): [Person]
   - person(id): Person

3. Mutations:
   - createMemory(input: MemoryInput): Memory
   - updateMemory(id: ID!, input: MemoryInput): Memory
   - deleteMemory(id: ID!): Boolean
   - createPerson(input: PersonInput): Person
   - updatePerson(id: ID!, input: PersonInput): Person
   - deletePerson(id: ID!): Boolean
   - tagPersonInMemory(memoryId: ID!, personId: ID!): Memory
   - removePersonFromMemory(memoryId: ID!, personId: ID!): Memory

Implement resolvers for each query and mutation that interact with the database.

# Test Strategy:
Test each GraphQL query and mutation with various inputs. Verify that relationships between memories and people are correctly maintained. Test error handling for invalid inputs and edge cases.
